name: Deploy Nginx Docker Image to EC2

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "ap-southeast-1a"  # Set your preferred AWS region
      IMAGE_NAME: "hasanroo10/nginx-hsn-test"

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v2

    # Build the Docker image
    - name: Build Docker Image
      run: docker build -t $IMAGE_NAME .

    # Login to Docker Hub
    - name: Login to Docker Hub
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    # Push the Docker image to Docker Hub
    - name: Push Docker Image to Docker Hub
      run: docker push $IMAGE_NAME

    # Get EC2 Instance IDs using the Name tag
    - name: Get EC2 Instance IDs
      run: |
        INSTANCE_IDS=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=autoscaling-instance" --query "Reservations[].Instances[].InstanceId" --output text)
        echo "INSTANCE_IDS=$INSTANCE_IDS" >> $GITHUB_ENV

    # Deploy Docker Image to EC2 instances
    - name: Deploy Docker Image to EC2 using SSM
      run: |
        for INSTANCE_ID in $INSTANCE_IDS; do
          echo "Deploying to instance: $INSTANCE_ID"
          aws ssm send-command \
            --instance-ids $INSTANCE_ID \
            --document-name "AWS-RunShellScript" \
            --comment "Deploying Docker container" \
            --parameters 'commands=["sudo apt update","sudo apt install -y docker.io","docker ps -q --filter \"ancestor=$IMAGE_NAME\" | grep -q . && docker stop $(docker ps -q --filter \"ancestor=$IMAGE_NAME\") && docker rm $(docker ps -q --filter \"ancestor=$IMAGE_NAME\")","docker pull $IMAGE_NAME","docker run -d -p 80:80 $IMAGE_NAME"]' \
            --region $AWS_REGION
        done
